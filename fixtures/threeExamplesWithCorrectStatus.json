{
  "openapi": "3.0.0",
  "info": {
    "description": "Fake Online REST API for Testing and Prototyping",
    "version": "1.0.0",
    "title": "JSON Placeholder"
  },
  "tags": [
    {
      "name": "posts"
    }
  ],
  "servers": [
    {
      "url": "https://jsonplaceholder.typicode.com"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Get all available posts",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter by post ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Filter by user ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            },
            "x-examples": {
              "default": {
                "parameters": [
                  {
                    "value": null
                  },
                  {
                    "value": null
                  }
                ],
                "responseFile": "../fixtures/output/mocks/GET_posts-200_DEFAULT.json"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Get specific post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the post to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "x-examples": {
              "id_1": {
                "parameters": [
                  {
                    "value": "1"
                  }
                ],
                "responseFile": "../fixtures/output/mocks/GET_posts_{id}-200_DEFAULT_id_1.json"
              },
              "id_2": {
                "parameters": [
                  {
                    "value": "2"
                  }
                ],
                "responseFile": "../fixtures/output/mocks/GET_posts_{id}-200_id_2.json"
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            },
            "x-examples": {
              "badParam": {
                "parameters": [
                  {
                    "value": "wrong-param"
                  }
                ],
                "responseFile": "../fixtures/output/mocks/GET_posts_{id}-404_DEFAULT_badParam.json"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "postId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "Album": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "Photo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "albumId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "thumbnailUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Todo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "company": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "catchPhrase": {
                "type": "string"
              },
              "bs": {
                "type": "string"
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "suite": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "geo": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "type": "object"
      },
      "Empty": {
        "type": "object",
        "title": "Empty response model for AWS + CORS use"
      },
      "StringResponse": {
        "type": "string",
        "title": "String-type workaround for API Gateway"
      }
    }
  }
}
